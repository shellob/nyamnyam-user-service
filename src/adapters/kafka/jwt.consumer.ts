import { KafkaService } from "./kafka.service";
import * as jwt from "jsonwebtoken";
import dotenv from "dotenv";

dotenv.config();

const SECRET_KEY = process.env.SECRET_KEY || "default_secret";

export class JWTConsumer {
    constructor(private kafkaService: KafkaService) {}

    async start() {
        console.log("üì° –°–ª—É—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É JWT...");

        await this.kafkaService.consumeMessages("jwt-validation", async (message) => {
            const { token } = message;

            try {
                console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º JWT:", token);
                const decoded = jwt.verify(token, SECRET_KEY);
                console.log("‚úÖ JWT –≤–∞–ª–∏–¥–µ–Ω:", decoded);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ OrderService
                await this.kafkaService.sendMessage("jwt-validation-response", { token, isValid: true });
            } catch (error) {
                console.error("‚ùå JWT –Ω–µ–≤–∞–ª–∏–¥–µ–Ω:", error);
                await this.kafkaService.sendMessage("jwt-validation-response", { token, isValid: false });
            }
        });
    }
}
